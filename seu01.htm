<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reloj y Color RGB Unificado</title>
    <style>
        /* Estilos para centrar el contenido y asegurar la visibilidad */
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            transition: background-color 1s ease; /* Transición suave para el color de fondo */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #ffffff; /* Color de texto blanco por defecto */
            text-shadow: 2px 2px 4px #000000; /* Sombra para mejor contraste */
            text-align: center;
        }
        #display-unificado {
            font-size: 4em; /* Fuente ligeramente más pequeña para acomodar ambos */
            font-weight: bold;
            line-height: 1.2; /* Espacio entre líneas */
        }
        .rgb-text {
            display: block; /* Asegura que el RGB esté en una nueva línea */
            font-size: 0.4em;
            font-weight: 300;
        }
    </style>
</head>
<body>

    <div id="display-unificado"></div>

    <script>
        function actualizarRelojYColor() {
            const ahora = new Date();
            let horas = ahora.getHours();
            let minutos = ahora.getMinutes();
            let segundos = ahora.getSeconds();

            // 1. Formato de dos dígitos para el tiempo
            const h = horas < 10 ? '0' + horas : horas;
            const m = minutos < 10 ? '0' + minutos : minutos;
            const s = segundos < 10 ? '0' + segundos : segundos;

            // 2. Cálculo del Color RGB (Misma lógica de mapeo)
            const R = Math.floor((horas / 23) * 255);
            const G = Math.floor((minutos / 59) * 255);
            const B = Math.floor((segundos / 59) * 255);

            // 3. Creación de las cadenas de texto y el color
            const tiempoStr = `${h}:${m}:${s}`;
            const rgbValoresStr = `RGB: (${R}, ${G}, ${B})`;
            const colorRGB = `rgb(${R}, ${G}, ${B})`;

            // 4. Actualización del DOM: Usamos innerHTML para incluir etiquetas HTML
            
            const contenidoHTML = `
                ${tiempoStr}
                <span class="rgb-text">${rgbValoresStr}</span>
            `;

            // Actualiza el único div con la hora y el RGB
            document.getElementById('display-unificado').innerHTML = contenidoHTML;

            // Actualiza el color de fondo del body
            document.body.style.backgroundColor = colorRGB;
        }

        // Ejecutar la función inmediatamente para la carga inicial
        actualizarRelojYColor();

        // Llamar a la función cada 1000 milisegundos (1 segundo)
        setInterval(actualizarRelojYColor, 1000);
    </script>

</body>
</html>
