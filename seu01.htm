<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reloj y RGB Flexible (Párrafo o Div)</title>
    <style>
        /* Estilos generales */
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            transition: background-color 1s ease, color 1s ease; /* Transiciones suaves */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            text-align: center;
        }
        /* Estilo para el elemento que muestre el contenido (aplicable a <p> o <div>) */
        #display-unificado {
            font-size: 3em; 
            font-weight: bold;
            line-height: 1.5;
            padding: 10px;
            max-width: 90%; 
            margin: 0; 
        }
    </style>
</head>
<body>

    <p id="display-unificado">Mostra un paràgraf</p>
    <div id="display-unificado">Mostra un DIV</div>
    <div>Holaaaaaa!</div>
    
    <script>
        // Función de utilidad para determinar el color de texto para el contraste
        function obtenerColorTexto(R, G, B) {
            // Luminancia = (0.299 * R) + (0.587 * G) + (0.114 * B)
            const luminancia = (0.299 * R) + (0.587 * G) + (0.114 * B);
            return luminancia > 186 ? '#000000' : '#ffffff'; // Negro para fondos claros, blanco para oscuros
        }

        function actualizarRelojYColor() {
            const ahora = new Date();
            let horas = ahora.getHours();
            let minutos = ahora.getMinutes();
            let segundos = ahora.getSeconds();

            // 1. Variables de Tiempo
            const h = horas < 10 ? '0' + horas : horas;
            const m = minutos < 10 ? '0' + minutos : minutos;
            const s = segundos < 10 ? '0' + segundos : segundos;

            // 2. Variables de Color RGB (Mapeo de tiempo a 0-255)
            const R = Math.floor((horas / 23) * 255);
            const G = Math.floor((minutos / 59) * 255);
            const B = Math.floor((segundos / 59) * 255);

            // 3. Creación de las variables de salida
            const tiempoStr = `${h}:${m}:${s}`;
            const rgbValoresStr = `(RGB: ${R}, ${G}, ${B})`; 
            const colorRGB = `rgb(${R}, ${G}, ${B})`;

            // 4. Combinación en una sola cadena de texto simple
            // const contenidoSimple = `${tiempoStr} — ${rgbValoresStr}`;
            const contenidoSimple = `El color de fons [RGB=${rgbValoresStr}] canvia automàticament amb l'hora oficial [HH:MM:SS=${tiempoStr}].`;

            // 5. Lógica de Contraste
            const colorTexto = obtenerColorTexto(R, G, B);

            // 6. Actualización del DOM
            // La variable 'displayElement' funciona con <p> o <div> mientras tengan el mismo ID.
            const displayElement = document.getElementById('display-unificado');
            
            // Si el elemento existe, actualizamos su contenido
            if (displayElement) {
                // Actualiza el texto simple
                displayElement.textContent = contenidoSimple;
                
                // Actualiza el color del texto para el contraste
                displayElement.style.color = colorTexto;
                
                // Aplicamos el color de fondo y el color de texto al body
                document.body.style.backgroundColor = colorRGB;
                document.body.style.color = colorTexto; 
            } else {
                console.error("El elemento con ID 'display-unificado' no se encontró.");
            }
        }

        // Ejecutar y establecer el intervalo
        actualizarRelojYColor();
        setInterval(actualizarRelojYColor, 1000);
    </script>

</body>
</html>
